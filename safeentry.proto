// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package SafeEntry;

// The greeting service definition.
service SafeEntry {
  rpc Message (Request) returns (Reply) {}
  rpc Login (UserInfo) returns (StatusInfo) {}
  rpc CheckIn (CheckRequest) returns (CheckResponse) {}
  rpc CheckOut (CheckRequest) returns (CheckResponse) {}
  rpc Check (StatusInfo) returns (StatusResponse) {}
}

service LocationData {
  rpc DeclareLocation (get_location_data) returns (location) {}
  rpc GetHistoryRecord (get_user_history) returns (history_record) {}
}

service Notification {
  rpc SendNotification (Empty) returns (stream DeclarationInfo) {}
  rpc ReceiveDeclaration(DeclarationInfo) returns (Empty){}
}

// The request message containing the request
message Request {
  string message = 1;
}

// The response message containing the reply
message Reply {
  string message = 1;
}

message StatusInfo {
  string status = 1;
}

message StatusResponse {
  enum SafeEntryStatus {
    CHECKIN = 0;
    CHECKOUT = 1;
  }
  SafeEntryStatus status = 1;
}

message NRICRequest {
  string nric = 1;
}

// The request message containing the check in/check out details
message CheckRequest {
  repeated string nric = 1;
  string location = 2; 
  string datetime = 3;
}

message CheckResponse {
  bool status = 1;
}


// Location Data
// Request for location data
message get_location_data {
  string location = 1;
  string nric = 2;
  string datetime = 3;
}

// Response containing the data
message location {
  repeated string response = 1;
}


// User History
message get_user_history {
  string nric = 1;
}

message HistoryRecord {
  string location = 1;
  string checkin = 2;
  string checkout = 3;
}

// Response containing the data
message history_record {
  repeated HistoryRecord response = 1;
}


// Notification 
message get_notification {
  string message = 1;
  string nric = 2;
}

message noti_info {
  string message = 1;
}

message DeclarationInfo {
  string message = 1;
}

message Empty {}

message UserInfo {
  string nric = 1;
  string name = 2;
  string password = 3;
  int32 role = 4;
}

message UserInfoDict {
  repeated UserInfo info = 1;
}
